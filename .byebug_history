continue
ApiKey.find_by(token: token).nil?
ApiKey.find_by(token: token)
options
token
continue
next
authenticate_with_http_token.nil?
authenticate_with_http_token.count
self
authenticate_with_http_token
continue
authenticate_with_http_token
continue
authenticate_with_http_token
continue
self.role
continue
self.driver
self.driver = Driver.new
Driver.new
self.role
continue
self.role
continue
})exit
  role: User.roles["driver"]
  phone: '3712-2121',
  password: 'estrelas',
  email: 'driver@gmail.com',
})driver = User.create({
  role: User.roles["driver"]
  phone: '3712-2121',
  password: 'estrelas',
  email: 'driver@gmail.com',
driver = User.create({
})
  role: User.roles["driver"]
  phone: '3712-2121',
  password: 'estrelas',
  email: 'driver@gmail.com',
driver = User.create({
continue
params
self
exit
base
:active_record
this
self
params
self
exit
user.driver.working_days.find_or_initialize_by(date: today)
user.driver.working_days.find_or_create(date: today)
user.driver.working_days << WorkingDay.new(date: today)
user.driver.working_days
user.driver
user
today
continue
@user.save!
@user.save
continue
@user.driver
@user
continue
user.api_key
continue
User.where(role: "organization").last.api_key
User.where(role: "organization").last
user.api_key
user
user.api_key
user
continue
@current_api_token
continue
current_user
options
token
